# (1) # For Ubuntu Server

$ sudo systemctl stop systemd-resolved
$ sudo systemctl disable systemd-resolved
$ sudo unlink /etc/resolv.conf

Then edit /etc/resolv.conf creating a new file and put this inside:
nameserver 127.0.0.1
search ubuntu
(set the same hostname!)

# Original resolv.conf (if needed on emergency):
nameserver 127.0.0.53
options edns0 trust-ad
search localdomain

# (2) # Edit /etc/hosts and add:
127.0.0.1 ubuntu

# Edit /etc/NetworkManager/NetworkManager.conf:
[main]
plugins=ifupdown,keyfile
dns=none

# (3) # To /etc/netplan/50-cloud-init.yaml:

network:
  ethernets:
    eth0:
      dhcp4: true
      optional: true
  wifis:
    renderer: NetworkManager
    wlxd037457c32f3:
      dhcp4: true
      optional: true
      access-points:
        "Apto 300 A":
          password: "******"
    wlxd03745867865:
      dhcp4: true
      addresses:
      - 192.168.4.1/24
      optional: true
      access-points:
        "ctOS PiHole":
          password: "******"
          mode: ap
  version: 2

# (4) # PiHole

sudo usermod -aG docker ubuntu

sudo mkdir -p /srv/containers/pihole/{etc,dnsmasq.d}

  docker run -d \
--name=pihole \
--network host \
--hostname=pihole \
--no-healthcheck \
-e SERVERIP=127.0.0.1 \
-e WEBPASSWORD="******" \
-v /etc/localtime:/etc/localtime:ro \
-v /srv/containers/pihole/etc/:/etc/pihole \
-v /srv/containers/pihole/dnsmasq.d/:/etc/dnsmasq.d \
-p 80:80 \
-p 443:443 \
-p 67:67/tcp \
-p 67:67/udp \
-p 53:53/tcp \
-p 53:53/udp \
--restart=unless-stopped \
pihole/pihole:latest

docker start pihole
docker exec pihole rm /etc/pihole/pihole-FTL.conf
docker exec pihole touch /etc/pihole/pihole-FTL.conf
docker exec pihole bash -c "echo 'LOCAL_IPV4=0.0.0.0' >> /etc/pihole/pihole-FTL.conf"
docker exec pihole bash -c "echo 'RATE_LIMIT=0/0' >> /etc/pihole/pihole-FTL.conf"
docker restart pihole

Profit!
