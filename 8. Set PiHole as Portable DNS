# (1) # For Ubuntu Server

$ sudo systemctl stop systemd-resolved
$ sudo systemctl disable systemd-resolved
$ sudo unlink /etc/resolv.conf

Then edit /etc/resolv.conf creating a new file and put this inside:
nameserver 127.0.0.1
search ubuntu
(set the same hostname!)

# Original resolv.conf (if needed on emergency):
nameserver 127.0.0.53
options edns0 trust-ad
search localdomain

# (2) # Edit /etc/hosts and add:
127.0.0.1 ubuntu

# Edit /etc/NetworkManager/NetworkManager.conf:
[main]
plugins=ifupdown,keyfile
dns=none

# (3) # To /etc/netplan/50-cloud-init.yaml:

network:
  ethernets:
    eth0:
      dhcp4: true
      optional: true
  wifis:
    renderer: NetworkManager
    wlxd037457c32f3:
      dhcp4: true
      optional: true
      access-points:
        "Apto 300 A":
          password: "******"
    wlxd03745867865:
      dhcp4: true
      addresses:
      - 192.168.4.1/24
      optional: true
      access-points:
        "ctOS PiHole":
          password: "******"
          mode: ap
  version: 2

# (4) # Remove DNSMASQ
sudo apt purge dnsmasq-base
sudo killall dnsmasq
TURN ON DHCP ON PIHOLE!
Set IP and Gateway 192.168.4.1...etc.

# (5) # PiHole

sudo usermod -aG docker ubuntu

sudo mkdir -p /srv/containers/pihole/{etc,dnsmasq.d}

docker stop pihole
docker rm pihole

docker run -d \
--name=pihole \
--network host \
--hostname=pihole \
--no-healthcheck \
--restart=unless-stopped \
--cap-add=NET_ADMIN \
--privileged \
-e INTERFACE=wlxd03745867865 \
-e DNSMASQ_LISTENING=single \
-e SERVERIP=127.0.0.1 \
-e WEBPASSWORD="*****" \
-v /etc/localtime:/etc/localtime:ro \
-v /srv/containers/pihole/etc/:/etc/pihole \
-v /srv/containers/pihole/dnsmasq.d/:/etc/dnsmasq.d \
pihole/pihole:latest

Profit!
