>>> >>> >>> >>> >>> >>> 
On Master

netk3s="172.20.0.X"
sudo curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --disable=traefik --flannel-backend=host-gw --tls-san=$netk3s --bind-address=$netk3s --advertise-address=$netk3s --node-ip=$netk3s --cluster-init --write-kubeconfig-mode 644" sh -s - 

sudo cat /var/lib/rancher/k3s/server/node-token

>>> >>> >>> >>> >>> >>> 
Workers

# Execute this to install the nodes as Multi-master (ONE AT TIME!)

curl -sfL https://get.k3s.io | K3S_TOKEN="" sh -s server --flannel-backend=host-gw --server https://172.20.0.X:6443

For SLOW WORKERS (RPi 3 ~1Gb RAM)
sudo curl -sfL https://get.k3s.io | K3S_URL=https://172.20.0.X:6443 K3S_TOKEN="" sh -

Debug:
journalctl -u k3s.service

>>> >>> >>> >>> >>> >>> 
K3s parameters examination:

server: This is telling k3s to run in server mode (as opposed to agent mode). In server mode, k3s will start up and manage Kubernetes master components.
—disable=traefik: This is instructing k3s to disable the Traefik ingress controller. By default, k3s includes and enables Traefik; this flag will prevent that from happening.
—flannel-backend=host-gw: This flag is setting the backend for Flannel (k3s’s default network provider) to use. The host-gw option provides high-performance networking by creating a route for each node in the cluster.
—tls-san=192.168.1.85: The —tls-san flag allows you to specify additional IP or DNS names that should be included in the TLS certificate that is automatically generated for the Kubernetes API server.
You can repeat this flag to add more than one SAN. The value 192.168.1.85 is an additional Subjective Alternative Name (SAN) for the Kubernetes API server’s certificate.
—bind-address=192.168.1.85: This is the IP address that the k3s API server will listen to.
—advertise-address=192.168.1.85: This is the IP address that the k3s API server will advertise to other nodes in the cluster. They will use this IP to connect to the API server.
—node-ip=192.168.1.85: This defines the IP that should be used for Kubernetes services on the node.
—cluster-init: This flag instructs k3s to initialize a new Kubernetes cluster. If this flag is not provided, k3s will join an existing cluster if one is available.
